/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studio;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JLabel;

import java.awt.Font;
import java.awt.Color;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.sql.DriverManager;
import java.sql.*;
import java.util.*;
import java.math.BigDecimal;
import studio.StaffDAO;
import studio.StaffTableModel;
import studio.AddStaffDialog;
/**
 *
 * @author Danny
 */
public class Staff extends javax.swing.JFrame {
 private Connection conn;
    private Statement st;
    private ResultSet rs;
    
    private int StaffID;
    private String StaffName;
    private String Designation;
    private String Password;
    private BigDecimal Pay;
    
    private StaffDAO staffdao;
   
    /**
     * Creates new form Staff
     */
    public Staff(int StaffID,String StaffName, String Designation, String Password, BigDecimal Pay ) {
        super();
        try{
            staffdao=new StaffDAO();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this,"Error:" +ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
     this.StaffID=StaffID;
     this.StaffName=StaffName;
     this.Designation=Designation;
     this.Password=Password;
     this.Pay=Pay;
    }
    public int getId() {
		return StaffID;
	}

	public void setId(int id) {
		this.StaffID = id;
	}

	public String getStaffName() {
		return StaffName;
	}

	public void setStaffName(String StaffName) {
		this.StaffName = StaffName;
	}

	public String getDesignation() {
		return Designation;
	}

	public void setDesignation(String Designation) {
		this.Designation = Designation;
	}
        
       public String getPassword() {
		return Password;
	}

	public void setPassword(String Password) {
		this.Password = Password;
	}        

	public BigDecimal getPay() {
		return Pay;
	}

	public void setPay(BigDecimal Pay) {
		this.Pay = Pay;
	}
 	@Override
	public String toString() {
		return String
				.format("Clients [id=%s, StaffName=%s, Designation=%s, Password=%s,Pay=%s ]",
						StaffID,StaffName, Designation, Password, Pay);
	}
        {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        StaffSearchLabel = new javax.swing.JLabel();
        SearchTextFeild = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AddRecord = new javax.swing.JButton();
        UpdateRecord = new javax.swing.JButton();
        DeleteRecord = new javax.swing.JButton();
        HistoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jInternalFrame1.setClosable(true);
        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setTitle("Staff Records");
        jInternalFrame1.setVisible(true);

        StaffSearchLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        StaffSearchLabel.setText("Enter Staff name to search:");

        Search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(StaffSearchLabel)
                .addGap(18, 18, 18)
                .addComponent(SearchTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StaffSearchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchTextFeild)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.setAutoscrolls(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Staff Name", "Designation", "Pay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        AddRecord.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddRecord.setText("ADD");
        AddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRecordActionPerformed(evt);
            }
        });

        UpdateRecord.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UpdateRecord.setText("Update");
        UpdateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRecordActionPerformed(evt);
            }
        });

        DeleteRecord.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DeleteRecord.setText("Delete");
        DeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRecordActionPerformed(evt);
            }
        });

        HistoryButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HistoryButton.setText("View History");
        HistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(UpdateRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(HistoryButton))
                .addGap(0, 44, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(AddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        try{
            String StaffName = SearchTextFeild.getText();
            
            List<Staff>staff=null;
            if(StaffName!=null && StaffName.trim().length()>0){
                staff = staffdao.SearchStaff(StaffName);
            }
            else{
                staff= staffdao.getAllStaff();
            }
            //Create the table and update the model
            StaffTableModel model= new StaffTableModel(staff);
            table.setModel(model);
            }
        catch(Exception ex){
                    JOptionPane.showMessageDialog(Staff.this,"Error:" +ex, "Error", JOptionPane.ERROR_MESSAGE);
                    }    
    }//GEN-LAST:event_SearchActionPerformed

    private void AddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRecordActionPerformed
       AddStaffDialog dialog = new AddStaffDialog(Staff.this,staffdao);
       dialog.setVisible(true);
    }//GEN-LAST:event_AddRecordActionPerformed

    private void UpdateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRecordActionPerformed
         //get the selected record
        int row = table.getSelectedRow();
        //make sure the row is selected
        if(row<0){
            JOptionPane.showMessageDialog(Staff.this,"You must select a Client.","Error:",JOptionPane.ERROR_MESSAGE);
            return;
        }
        //get the current client
        Staff tempClient = (Staff) table.getValueAt(row, ClientTableModel.OBJECT_COL);
        //create dialog
        AddStaffDialog dialog = new AddStaffDialog(Staff.this,staffdao,tempClient,true);
        //show dialog
        dialog.setVisible(true);
    }//GEN-LAST:event_UpdateRecordActionPerformed

    private void DeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRecordActionPerformed
              try{
           //get selected row
           int row = table.selectedRow();
           //make sure a row is selected
           if(row<0){
               JOptionPane.showMessageDialog(Staff.this,"You must select a Staff to delete.","Error:",JOptionPane.ERROR_MESSAGE);
               return;
           }
           //prompt the user
           int response = JOptionPane.showConfirmDialog(Staff.this,"Do you want to delete this staff?","Confirm",
                   JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
           if(response != JOptionPane.YES_OPTION){
               return;
           }
           //get the current client
           Staff tempClient = (Staff) table.getValueAt(row,ClientTableModel.OBJECT_COL);   
           //delete the client
           staffdao.deleteStaff(tempClient.getId());
           //refresh GUI
           refreshStaffView();
           //show success message
           JOptionPane.showMessageDialog(Staff.this,"Staff was deleted successfully,","Staff deleted",JOptionPane.INFORMATION_MESSAGE);
       }
       catch(Exception ex){
           JOptionPane.showMessageDialog(Staff.this,"Error deleting client:"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_DeleteRecordActionPerformed

    private void HistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistoryButtonActionPerformed
       //get the selected staff
        int row = table.getSelectedRow(); 
        //make sure row is selected
        if(row<0){
            JOptionPane.showMessageDialog(Staff.this,"You must select a record to view","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        // get the current staff
        Staff tempStaff= (Staff) table.getValueAt(row,StaffTableModel.OBJECT_COL);
        try{
           //get the history for the client
            int staffId = tempStaff.getId();
            List<AuditHistory> auditHistoryList = staffdao.getAuditHistory(staffId);
            //show audit history dialog
            StaffAuditHistory dialog = new StaffAuditHistory();
            dialog.populate(tempStaff, auditHistoryList);
            
            dialog.setVisible(true);
        }
        catch(Exception ex){
               ex.printStackTrace();
               JOptionPane.showMessageDialog(Staff.this,"Error retieving audit history.","Error",JOptionPane.ERROR_MESSAGE);
               return;
        }
    }//GEN-LAST:event_HistoryButtonActionPerformed
    public void refreshStaffView(){
        try{
            List<Staff>staff= staffdao.getAllStaff();
            
            //create the model and update the table
            StaffTableModel model = new StaffTableModel(staff);
            table.setModel(model);
            dispose();
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error:" +ex, "Error", JOptionPane.ERROR_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
         String dburl="jdbbc:mysql://localhost/3306/studio";
        String user= "root";
        String password= "";
        try{
            //get connection to database
            Connection conn = DriverManager.getConnection(dburl,user,password);
            //Create statement
            Statement st= conn.createStatement();
            //Execute sql query
            String sql="Insert into staff" +"(StaffName,Designation,Password,Pay)"+"values (?,?,?,?)";
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRecord;
    private javax.swing.JButton DeleteRecord;
    private javax.swing.JButton HistoryButton;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchTextFeild;
    private javax.swing.JLabel StaffSearchLabel;
    private javax.swing.JButton UpdateRecord;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
